# See https://ocaml.org/learn/tutorials/setting_up_with_oasis.html for more
OASISFormat:    0.4
OCamlVersion:   >= 4.02.3
Name:           bjsim
Version:        0.1
Maintainers:    Ximin Luo <infinity0@pwned.gg>
Homepage:       https://github.com/infinity0/bjsim-ocaml
Synopsis:       Blackjack strategy calculator
Authors:        Ximin Luo <infinity0@pwned.gg>
License:        GPL-3+
Plugins:        META (0.4), DevFiles (0.4)
BuildTools:     ocamlbuild
AlphaFeatures:  ocamlbuild_more_args
Description:
  Example code for using different OCaml packaging tools.

SourceRepository master
  Type: git
  Location: https://github.com/infinity0/bjsim-ocaml
  Branch: master
  Browser: https://github.com/infinity0/bjsim-ocaml

Library bjsim
  Path: src
  Modules: Hand, Payout, Prob, Reg, Rule, Shoe, Sim, Table
  BuildDepends: batteries, sexplib.syntax, sexplib_num

Executable bjsim
  Path: .
  Install: true
  MainIs: bjsim.ml
  CompiledObject: best
  BuildDepends: batteries, bjsim, cmdliner, utop
  # TODO: oasis in the future will support ocamlmktop targets, then some of
  # these flags won't be necessary. we then can also add a bjsim.mltop file to
  # have those modules automatically loaded in the repl when it starts.
  ByteOpt: -thread -linkall -predicates create_toploop -package compiler-libs.toplevel
  # TODO: this is of course a massive hack; use ppx instead
  NativeOpt: -thread -pp "sed -e '/{{BYTECODE_ONLY{{/,/}}BYTECODE_ONLY}}/d'"

Executable "ounit_test"
  Build$: flag(tests)
  Path: test
  MainIs: test.ml
  CompiledObject: best
  Install: false
  BuildDepends: oUnit, bjsim

Test "ounit_test"
  Run$: flag(tests)
  TestTools: ounit_test
  Command: $ounit_test
  WorkingDirectory: test

Document bjsim_api
  Type: ocamlbuild (0.4)
  BuildTools: ocamldoc
  Title: API reference for bjsim-ocaml
  XOCamlbuildPath: .
  XOCamlbuildExtraArgs:
    "-docflags '-colorize-code -short-functors -charset utf-8 -stars'"
  XOCamlbuildLibraries: bjsim
# TODO: add links to BatInterfaces.Monad et. al.
